name: Build and Deploy

on:
  push:
    branches:
      - main  # O la rama que quieras monitorear
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Configurar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Configurar Java y Maven
      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 3. Construir el proyecto con Maven
      - name: Build with Maven
        run: mvn clean package

      # 4. Configurar Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Construir y etiquetar la imagen Docker
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ms-books-catalogue:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/ms-books-catalogue:latest ${{ secrets.DOCKER_USERNAME }}/ms-books-catalogue:${{ github.sha }}

      # 6. Subir la imagen a DockerHub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ms-books-catalogue:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/ms-books-catalogue:${{ github.sha }}